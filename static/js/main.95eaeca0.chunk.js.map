{"version":3,"sources":["Components/APOD.js","Components/Home.js","Components/Search.js","Components/EPIC.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","process","APOD","useState","photoData","setPhotoData","useEffect","a","fetch","res","json","data","fetchPhotoData","className","title","copyright","date","src","url","alt","explanation","Home","to","Search","searchInput","setSearchInput","textInput","React","createRef","then","imageHtml","Array","from","collection","items","map","subItem","desc","links","description","href","rel","htmls","join","document","getElementById","innerHTML","catch","error","console","log","type","ref","placeholder","onKeyDown","e","current","value","onClick","id","EPIC","caption","setCaption","fetchData","Object","keys","item","dateString","slice","split","year","month","day","imageUrl","image","identifier","App","basename","component","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.95eaeca0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nexport default function APOD() {\r\n    const [photoData,  setPhotoData] =useState(null);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPhotoData();\r\n        async function fetchPhotoData() {\r\n            const res = await fetch(\r\n                `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\r\n            );\r\n            const data =await res.json();\r\n            setPhotoData(data);\r\n        }\r\n       \r\n    }, [])\r\n\r\n    if(!photoData) {\r\n        return <div/>\r\n    }\r\n    return (\r\n        <div className=\"apod\">\r\n        <h2>Picture of the day</h2>\r\n        <div className=\"container photo\">\r\n            <h3 className=\"photo__title\">{photoData.title}</h3>\r\n            <p className=\"photo__info\">{photoData.copyright} - {photoData.date}</p>\r\n            <div className=\"photo__wrapper\">\r\n                <img className=\"photo_image\" src={photoData.url} alt={photoData.title}/>\r\n            </div>\r\n            <div className=\"photo__explanation\">{photoData.explanation}</div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <h1 className=\"home__title\">Nasa Api App</h1>\r\n            <div className=\"home__info\">\r\n                <h2 className=\"home__desc\">A small web app using Nasa Api</h2>\r\n            </div>\r\n            <div className=\"menu\">\r\n                <Link className=\"link\" to='/APOD' >Picture of the day</Link>\r\n                <Link className=\"link\" to='/Search' >Search in Nasa library</Link>\r\n                <Link className=\"link\" to='/EPIC' >Earth camera</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\n\r\n\r\n\r\nexport default function Search() {\r\n\r\n    const [searchInput, setSearchInput]= useState(\"Earth\");\r\n    let textInput = React.createRef();\r\n\r\n    const handleClick=()=>{\r\n        setSearchInput(textInput.current.value);\r\n    }\r\n\r\n    const keyPresshandler=(e)=>{\r\n        console.log('change text')\r\n         setSearchInput(textInput.current.value);\r\n    }\r\n    useEffect(() => {\r\n        async function fetchPhotoData() {\r\n            const res = await fetch(\r\n                `https://images-api.nasa.gov/search?q=${searchInput}`\r\n            )\r\n                \r\n            const data =await res.json();\r\n            return data;\r\n            }\r\n\r\n            fetchPhotoData().then(function(data){\r\n                if(data){\r\n                    var arrayData = Array.from(data.collection.items)\r\n                    var imageHtml= arrayData.map((subItem)=>{\r\n                        let url\r\n                        let alt\r\n                        let desc\r\n                        if(subItem.links){\r\n                            desc=subItem.data[0].description\r\n                            url=subItem.links[0].href\r\n                            alt=subItem.links[0].rel\r\n                            return (\r\n                                `\r\n                                <div className=\"search__image--wrapper\">\r\n                                     <p className=\"search__image--desc\">${desc}</p>\r\n                                      <img className=\"search__image\" src=${url} alt=\"${alt}\"\r\n                                      onerror=\"this.parentNode.style.display='none';\"/>\r\n                                </div>   \r\n                                `\r\n                            )\r\n                        }\r\n                        else{\r\n                            return (``)\r\n                        }\r\n      \r\n                        \r\n                        })\r\n                    }\r\n                    var htmls = imageHtml.join('');\r\n                    document.getElementById('search__images--container').innerHTML=htmls;\r\n            })\r\n            .catch(function(error){\r\n                console.log(error);\r\n            });\r\n        \r\n         },[searchInput])\r\n\r\n     \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <h2 className=\"search__title\">Image and Video Search</h2>\r\n             <div  className=\"search__form\">\r\n                <input className=\"search__input\" type=\"text\" ref={textInput} placeholder=\"Enter key word\"\r\n                 onKeyDown={keyPresshandler} />\r\n                 <button className=\"search__button\" onClick={handleClick}>Search</button>\r\n             </div>\r\n             <h3 className=\"search__keyword\">Results of \"<span>{searchInput}</span>\" in Nasa Image Library</h3>\r\n             <div className=\"search__images--container\" id=\"search__images--container\"> </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useState, useEffect } from 'react'\r\n\r\n\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nexport default function EPIC() {\r\n    const [caption, setCaption]=useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const res = await fetch(\r\n                `https://api.nasa.gov/EPIC/api/natural/images?api_key=${apiKey}`\r\n            );\r\n            const data =await res.json();\r\n            return data;\r\n        }\r\n        fetchData().then(function (data) {\r\n            if(data){\r\n                setCaption(data[0].caption)\r\n                var imageHtml=Object.keys(data).map((item) => {\r\n                if(data[item].date){\r\n                    let dateString=data[item].date.slice(0,10).split('-');\r\n                    let year=dateString[0];\r\n                    let month=dateString[1];\r\n                    let day=dateString[2];\r\n                    let imageUrl = `https://epic.gsfc.nasa.gov/archive/natural/${year}/${month}/${day}/png/${data[item].image}.png`\r\n                    return(\r\n                          `<div className=\"epic__image--wrapper\">\r\n                                <p className=\"epic__image--title\">${data[item].date}</p>\r\n                                <img className=\"epic__image\" src=${imageUrl} alt=${data[item].identifier}\r\n                                onerror=\"this.style.display='none';\"/>\r\n                            </div>\r\n                        `\r\n                         )\r\n                }\r\n                else{\r\n                    return(``)\r\n                }\r\n            })\r\n            var htmls= imageHtml.join('')\r\n            document.getElementById('epic__images--container').innerHTML=htmls\r\n            }\r\n         }).catch(function(error){\r\n        console.log(error);\r\n     })\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"epic\">\r\n        <h2 className=\"epic__title\">Earth Polychromatic Imaging Camera</h2>\r\n        <h3 className=\"epic__caption\">{caption}</h3>\r\n        <div className=\"epic__images--container\" id=\"epic__images--container\">\r\n\r\n        </div>\r\n        </div>\r\n        )\r\n}\r\n","import {BrowserRouter, Route} from 'react-router-dom';\r\nimport APOD from './Components/APOD'\r\nimport Home from './Components/Home'\r\nimport Search from './Components/Search'\r\nimport EPIC from './Components/EPIC'\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <div>\r\n        <Route component={Home} path=\"/\" exact/>\r\n        <Route component={APOD} path=\"/APOD\"/>\r\n        <Route component={Search} path=\"/Search\"/>\r\n        <Route component={EPIC} path=\"/EPIC\"/>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}